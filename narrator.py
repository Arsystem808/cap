# -*- coding: utf-8 -*-
from __future__ import annotations
import random

def pick(arr, seed_key=""):
    random.seed(str(seed_key))
    return random.choice(arr)

def humanize(ticker: str, horizon: str, decision: dict) -> str:
    hz = {"ST":"–∫—Ä–∞—Ç–∫–æ—Å—Ä–æ–∫","MID":"—Å—Ä–µ–¥–Ω–µ—Å—Ä–æ–∫","LT":"–¥–æ–ª–≥–æ—Å—Ä–æ–∫"}[horizon]
    price = decision["price"]
    base, alt = decision["base"], decision["alt"]
    regime = decision.get("ctx",{}).get("regime","?")

    intros = {
        "ST": [
            "–°–µ–π—á–∞—Å –≤–∞–∂–Ω–µ–µ —Ç–æ—á–Ω–æ—Å—Ç—å, —á–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å.",
            "–û—Ç –∫—Ä–∞—ë–≤ –±–µ—Ä—É –æ—Ö–æ—Ç–Ω–µ–µ, —Å–µ—Ä–µ–¥–∏–Ω–∫—É –ø—Ä–æ–ø—É—Å–∫–∞—é.",
            "–ï—Å–ª–∏ —Ä—ã–Ω–æ–∫ —Ç—è–Ω–µ—Ç –±–µ–∑ –æ—Ç–¥—ã—Ö–∞ ‚Äî —á–∞—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –±—ã—Å—Ç—Ä–æ."
        ],
        "MID": [
            "–†—ã–Ω–æ–∫ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–∏–ª—É ‚Äî –Ω–µ —Å–ø–µ—à–∏–º.",
            "–î–æ–∂–¥—É—Å—å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –≤ –æ–ø–æ—Ä–Ω–æ–π –∑–æ–Ω–µ ‚Äî —Ç–∞–º –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ.",
            "–õ–∏—à–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–µ–π—á–∞—Å —Ö—É–∂–µ, —á–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ."
        ],
        "LT": [
            "–ü–æ–¥ –ø–æ—Ç–æ–ª–∫–æ–º –Ω–µ –ø–æ–∫—É–ø–∞—é ‚Äî –≤—Å—Ç—Ä–µ—á—É –Ω–∏–∂–µ.",
            "–ó–¥–µ—Å—å –≤–∞–∂–Ω–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ç–æ—á–∫–∏, —á–µ–º —Ä–∞–Ω–Ω–∏–π –≤—Ö–æ–¥.",
            "–ü—É—Å—Ç—å —Ä—ã–Ω–æ–∫ –≤—ã–¥–æ—Ö–Ω–µ—Ç ‚Äî —Ç–∞–º –±—É–¥–µ—Ç –Ω–∞—à–∞ –∑–æ–Ω–∞."
        ]
    }
    intro = pick(intros[horizon], seed_key=ticker+hz+str(price))

    def block(title, side):
        act = side["action"]
        if act == "WAIT":
            return f"{title}:\n‚Üí WAIT\n"
        txt = [f"{title}: {act}"]
        if side["entry"] is not None: txt.append(f"–≤—Ö–æ–¥: {side['entry']}")
        if side["tp1"] is not None:   txt.append(f"—Ü–µ–ª—å 1: {side['tp1']}")
        if side["tp2"] is not None:   txt.append(f"—Ü–µ–ª—å 2: {side['tp2']}")
        if side["sl"]  is not None:   txt.append(f"–∑–∞—â–∏—Ç–∞: {side['sl']}")
        return " | ".join(txt)

    headline = f"üìà {ticker} ‚Äî {hz} (—Ä–µ–∂–∏–º: {regime})\n–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: {price}\n\n{intro}\n"
    body = block("‚úÖ –ü–ª–∞–Ω", base) + "\n" + block("üîÅ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞", alt)

    tails = [
        "–ï—Å–ª–∏ —Å—Ü–µ–Ω–∞—Ä–∏–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è ‚Äî —Ä–∞–±–æ—Ç–∞–µ–º; –ª–æ–º–∞–µ—Ç—Å—è ‚Äî –≤—ã—Ö–æ–¥–∏–º –±–µ–∑ –∫–æ–ª–µ–±–∞–Ω–∏–π.",
        "–ù–µ –±–µ–≥–∞–µ–º –∑–∞ —Ü–µ–Ω–æ–π. –ë–µ—Ä—ë–º —Ç–∞–º, –≥–¥–µ –ø–µ—Ä–µ–≤–µ—Å –Ω–∞ –Ω–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω–µ.",
        "–ü–ª–∞–Ω –µ—Å—Ç—å ‚Äî –Ω–∞–±–ª—é–¥–∞–µ–º –∏ –¥–µ–π—Å—Ç–≤—É–µ–º –ø–æ —Ñ–∞–∫—Ç—É."
    ]
    tail = pick(tails, seed_key=hz+ticker)
    return f"{headline}\n{body}\n\n{tail}"

